{"version":3,"sources":["../src/scroll-up.js"],"names":["ScrollUpResolver","VERSION","Selectors","SCROLL_UP_MONITOR","Data","TOGGLE_CLASS","DataDefault","Events","SCROLL_UP","Resolver","NAMESPACE","SCROLL_UP_OFF","DOM_CONTENT_LOADED","lastMetric","crtMetric","lastTop","top","crtTop","Util","createEvent","subscriber","toggleClass","dataset","addEventListener","classList","add","remove","document","querySelectorAll","window","Monitor","registerResolver","_initByData"],"mappings":";;;;;;;;;;;;;;;;;;AAIA;;;;;;AAOA,IAAMA,mBAAoB,YAAM;AAE9B,MAAMC,UAAU,OAAhB;AAEA,MAAMC,YAAY;AAChBC,uBAAmB;AADH,GAAlB;AAIA,MAAMC,OAAO;AACXC,kBAAc;AADH,GAAb;AAIA,MAAMC,cAAc;AAClBD,kBAAc;AADI,GAApB;AAIA,MAAME,SAAS;AACbC,mCAAwBC,SAASC,SAAjC,CADa;AAEbC,2CAAgCF,SAASC,SAAzC,CAFa;AAGbE,wBAAoB;AAHP,GAAf;;AAhB8B,MAsBxBZ,gBAtBwB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,8BAgDpBa,UAhDoB,EAgDRC,SAhDQ,EAgDG;AAC7B,YAAIC,UAAUF,WAAWG,GAAzB;AACA,YAAIC,SAASH,UAAUE,GAAvB;;AACA,YAAIC,SAASF,OAAb,EAAsB;AACpB,iBAAOG,KAAKC,WAAL,CAAiBZ,OAAOC,SAAxB,CAAP;AACD,SAFD,MAEO;AACL,iBAAOU,KAAKC,WAAL,CAAiBZ,OAAOI,aAAxB,CAAP;AACD;AACF;AAxD2B;AAAA;AAAA,0BA4BX;AACf,eAAO,CAACJ,OAAOC,SAAR,EAAmBD,OAAOI,aAA1B,CAAP;AACD;AAED;;;;;AAhC4B;AAAA;AAAA,oCAoCP;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,gBACRS,UADQ;AAEjB,gBAAMC,cAAcD,WAAWE,OAAX,CAAmBlB,KAAKC,YAAxB,KAAyCC,YAAYD,YAAzE;AACAe,uBAAWG,gBAAX,CAA4BhB,OAAOC,SAAnC,EAA8C,YAAM;AAClDY,yBAAWI,SAAX,CAAqBC,GAArB,CAAyBJ,WAAzB;AACD,aAFD;AAGAD,uBAAWG,gBAAX,CAA4BhB,OAAOI,aAAnC,EAAkD,YAAM;AACtDS,yBAAWI,SAAX,CAAqBE,MAArB,CAA4BL,WAA5B;AACD,aAFD;AANiB;;AACnB,+BAAyBM,SAASC,gBAAT,CAA0B1B,UAAUC,iBAApC,CAAzB,8HAAiF;AAAA;AAQhF;AATkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUpB;AA9C2B;AAAA;AAAA,0BAwBP;AACnB,eAAOF,OAAP;AACD;AA1B2B;;AAAA;;AAAA;AAAA,IAsBCQ,QAtBD;;AA2D9BoB,SAAON,gBAAP,CAAwBhB,OAAOK,kBAA/B,EAAmD,YAAM;AACvDkB,YAAQC,gBAAR,CAAyB,IAAI/B,gBAAJ,EAAzB;;AACAA,qBAAiBgC,WAAjB;AACD,GAHD;AAKA,SAAOhC,gBAAP;AACD,CAjEwB,EAAzB","sourcesContent":["import Util from './util'\nimport Resolver from './resolver'\nimport Monitor from './monitor'\n\n/**\n * ----------------------------------------------------------------------------------\n * ScrollMonitor (v0.1.0): scroll-up.js\n * Licensed under MIT (https://github.com/swgrhck/scroll-monitor/blob/master/LICENSE)\n * ----------------------------------------------------------------------------------\n */\n\nconst ScrollUpResolver = (() => {\n\n  const VERSION = '0.1.0'\n\n  const Selectors = {\n    SCROLL_UP_MONITOR: '[data-monitor~=\"scroll-up\"]'\n  }\n\n  const Data = {\n    TOGGLE_CLASS: 'scrollUpClass'\n  }\n\n  const DataDefault = {\n    TOGGLE_CLASS: 'scroll-up'\n  }\n\n  const Events = {\n    SCROLL_UP: `scroll.up.${Resolver.NAMESPACE}`,\n    SCROLL_UP_OFF: `scroll.up.off.${Resolver.NAMESPACE}`,\n    DOM_CONTENT_LOADED: 'DOMContentLoaded'\n  }\n\n  class ScrollUpResolver extends Resolver {\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    get eventTypes() {\n      return [Events.SCROLL_UP, Events.SCROLL_UP_OFF]\n    }\n\n    /**\n     * Add class toggle event listeners those respond to events of {@link ScrollUpResolver} to subscribers by data attributes.\n     * This function can NOT be invoked repeatedly safely, event listeners will be registered repeatedly.\n     */\n    static _initByData() {\n      for (const subscriber of document.querySelectorAll(Selectors.SCROLL_UP_MONITOR)) {\n        const toggleClass = subscriber.dataset[Data.TOGGLE_CLASS] || DataDefault.TOGGLE_CLASS\n        subscriber.addEventListener(Events.SCROLL_UP, () => {\n          subscriber.classList.add(toggleClass)\n        })\n        subscriber.addEventListener(Events.SCROLL_UP_OFF, () => {\n          subscriber.classList.remove(toggleClass)\n        })\n      }\n    }\n\n    resolve(lastMetric, crtMetric) {\n      let lastTop = lastMetric.top\n      let crtTop = crtMetric.top\n      if (crtTop < lastTop) {\n        return Util.createEvent(Events.SCROLL_UP)\n      } else {\n        return Util.createEvent(Events.SCROLL_UP_OFF)\n      }\n    }\n  }\n\n  window.addEventListener(Events.DOM_CONTENT_LOADED, () => {\n    Monitor.registerResolver(new ScrollUpResolver())\n    ScrollUpResolver._initByData()\n  })\n\n  return ScrollUpResolver\n})()\n\nexport default ScrollUpResolver\n"],"file":"scroll-up.js"}