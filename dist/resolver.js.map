{
  "version": 3, "sources": ["../src/resolver.js"],
  "names": ["Resolver", "VERSION", "EVENT_NAMESPACE", "lastMetric", "crtMetric", "event", "Error"],
  "mappings": ";;;;;;AAAA;;;;;;AAOA,IAAMA,WAAY,YAAM;AAEtB,MAAMC,UAAU,OAAhB;AACA,MAAMC,kBAAkB,gBAAxB;;AAHsB,MAKhBF,QALgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsBpB;;AAEA;;;;;;;;AAxBoB,8BAgCZG,UAhCY,EAgCAC,SAhCA,EAgCWC,KAhCX,EAgCkB;AAAE;AACtC,cAAM,IAAIC,KAAJ,CAAU,wFAAV,CAAN;AACD;AAlCmB;AAAA;;AAgBpB;;;AAhBoB,0BAmBH,CAChB;AApBmB;AAAA;AAMpB;AANoB,0BAQC;AACnB,eAAOL,OAAP;AACD;AAVmB;AAAA;AAAA,0BAYG;AACrB,eAAOC,eAAP;AACD;AAdmB;;AAAA;AAAA;;AAqCtB,SAAOF,QAAP;AACD,CAtCgB,EAAjB",
  "sourcesContent": [
    "/**\n * ----------------------------------------------------------------------------------\n * ScrollMonitor (v0.1.0): resolver.js\n * Licensed under MIT (https://github.com/swgrhck/scroll-monitor/blob/master/LICENSE)\n * ----------------------------------------------------------------------------------\n */\n\nconst Resolver = (() => {\n\n  const VERSION = '0.1.0'\n  const EVENT_NAMESPACE = 'scroll-monitor'\n\n  class Resolver {\n    // Getter\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    static get NAMESPACE() {\n      return EVENT_NAMESPACE\n    }\n\n    /**\n     * Return an array of event types this revolver will generate\n     */\n    get eventTypes() {\n    }\n\n    // Public\n\n    /**\n     * Resolve metrics and event received from Monitor and\n     * return a new resolved Event which should be dispatched to subscribers of Monitor\n     * @param lastMetric last scroll metric\n     * @param crtMetric current scroll metric\n     * @param event the scroll event that monitor received\n     * @return {Event}\n     */\n    resolve(lastMetric, crtMetric, event) { // eslint-disable-line no-unused-vars\n      throw new Error('Method is not implemented. Instance must override this method to resolve scroll event!')\n    }\n  }\n\n  return Resolver\n})()\n\nexport default Resolver\n"
  ], "file": "resolver.js"
}
