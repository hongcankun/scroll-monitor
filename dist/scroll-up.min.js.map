{"version":3,"sources":["../src/scroll-up.js"],"names":["ScrollUpResolver","Selectors","Data","DataDefault","Events","SCROLL_UP","Resolver","NAMESPACE","SCROLL_UP_OFF","DOM_CONTENT_LOADED","_Resolver","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_createClass","key","value","lastMetric","crtMetric","lastTop","top","Event","get","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","subscriber","toggleClass","dataset","addEventListener","classList","add","remove","_iterator","document","querySelectorAll","Symbol","iterator","next","done","err","return","_inherits","window","Monitor","registerResolver","_initByData"],"mappings":";;;;;gzCAUA,IAAMA,iBAAoB,WAExB,IAEMC,EACe,8BAGfC,EACU,gBAGVC,EACU,YAGVC,EAAS,CACbC,UAAAA,aAAAA,OAAwBC,SAASC,WACjCC,cAAAA,iBAAAA,OAAgCF,SAASC,WACzCE,mBAAoB,oBAGhBT,EAtBwB,SAAAU,GAAA,SAAAV,IAAA,OAAAW,gBAAAC,KAAAZ,GAAAa,2BAAAD,KAAAE,gBAAAd,GAAAe,MAAAH,KAAAI,YAAA,OAAAC,aAAAjB,EAAA,CAAA,CAAAkB,IAAA,UAAAC,MAAA,SAgDpBC,EAAYC,GAClB,IAAIC,EAAUF,EAAWG,IAEzB,OADaF,EAAUE,IACVD,EACJ,IAAIE,MAAMpB,EAAOC,WAEjB,IAAImB,MAAMpB,EAAOI,iBAtDA,CAAAU,IAAA,aAAAO,IAAA,WA6B1B,MAAO,CAACrB,EAAOC,UAAWD,EAAOI,kBA7BP,CAAA,CAAAU,IAAA,cAAAC,MAAA,WAoCP,IAAAO,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACnB,IADmB,IACnBC,EADmBC,EAAA,WAAA,IACRC,EADQF,EAAAX,MAEXc,EAAcD,EAAWE,QAAQhC,IAAsBC,EAC7D6B,EAAWG,iBAAiB/B,EAAOC,UAAW,WAC5C2B,EAAWI,UAAUC,IAAIJ,KAE3BD,EAAWG,iBAAiB/B,EAAOI,cAAe,WAChDwB,EAAWI,UAAUE,OAAOL,MANhCM,EAAyBC,SAASC,iBAAiBxC,GAAnDyC,OAAAC,cAAAjB,GAAAI,EAAAS,EAAAK,QAAAC,MAAAnB,GAAA,EAAiFK,IAD9D,MAAAe,GAAAnB,GAAA,EAAAC,EAAAkB,EAAA,QAAA,IAAApB,GAAA,MAAAa,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAApB,EAAA,MAAAC,MApCO,CAAAV,IAAA,UAAAO,IAAA,WAyB1B,MAvBY,YAFcuB,UAAAhD,EAAAU,GAAAV,EAAA,CAsBCM,UA0C/B,OALA2C,OAAOd,iBAAiB/B,EAAOK,mBAAoB,WACjDyC,QAAQC,iBAAiB,IAAInD,GAC7BA,EAAiBoD,gBAGZpD,EAhEiB","file":"scroll-up.min.js","sourcesContent":["import Resolver from './resolver'\nimport Monitor from './monitor'\n\n/**\n * ----------------------------------------------------------------------------------\n * ScrollMonitor (v0.1.0): scroll-up.js\n * Licensed under MIT (https://github.com/swgrhck/scroll-monitor/blob/master/LICENSE)\n * ----------------------------------------------------------------------------------\n */\n\nconst ScrollUpResolver = (() => {\n\n  const VERSION = '0.1.0'\n\n  const Selectors = {\n    SCROLL_UP_MONITOR: '[data-monitor~=\"scroll-up\"]'\n  }\n\n  const Data = {\n    TOGGLE_CLASS: 'scrollUpClass'\n  }\n\n  const DataDefault = {\n    TOGGLE_CLASS: 'scroll-up'\n  }\n\n  const Events = {\n    SCROLL_UP: `scroll.up.${Resolver.NAMESPACE}`,\n    SCROLL_UP_OFF: `scroll.up.off.${Resolver.NAMESPACE}`,\n    DOM_CONTENT_LOADED: 'DOMContentLoaded'\n  }\n\n  class ScrollUpResolver extends Resolver {\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    get eventTypes() {\n      return [Events.SCROLL_UP, Events.SCROLL_UP_OFF]\n    }\n\n    /**\n     * Add class toggle event listeners those respond to events of {@link ScrollUpResolver} to subscribers by data attributes.\n     * This function can NOT be invoked repeatedly safely, event listeners will be registered repeatedly.\n     */\n    static _initByData() {\n      for (const subscriber of document.querySelectorAll(Selectors.SCROLL_UP_MONITOR)) {\n        const toggleClass = subscriber.dataset[Data.TOGGLE_CLASS] || DataDefault.TOGGLE_CLASS\n        subscriber.addEventListener(Events.SCROLL_UP, () => {\n          subscriber.classList.add(toggleClass)\n        })\n        subscriber.addEventListener(Events.SCROLL_UP_OFF, () => {\n          subscriber.classList.remove(toggleClass)\n        })\n      }\n    }\n\n    resolve(lastMetric, crtMetric) {\n      let lastTop = lastMetric.top\n      let crtTop = crtMetric.top\n      if (crtTop < lastTop) {\n        return new Event(Events.SCROLL_UP)\n      } else {\n        return new Event(Events.SCROLL_UP_OFF)\n      }\n    }\n  }\n\n  window.addEventListener(Events.DOM_CONTENT_LOADED, () => {\n    Monitor.registerResolver(new ScrollUpResolver())\n    ScrollUpResolver._initByData()\n  })\n\n  return ScrollUpResolver\n})()\n\nexport default ScrollUpResolver\n"]}